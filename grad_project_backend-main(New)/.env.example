# Face Recognition Backend - Environment Configuration
# Copy this file to .env and update with your settings

# ========================================
# MQTT Configuration
# ========================================
# Your WiFi IP address (find with: ipconfig on Windows, ip addr on Linux)
# This MUST match across all services!
MQTT_BROKER=192.168.1.7
MQTT_PORT=1883

# ========================================
# Face Service Configuration
# ========================================
# API URL (use localhost for same machine)
FACE_API_URL=http://localhost:8000

# ========================================
# Directory Configuration
# ========================================
# For Docker: use /data/persons and /data/caps
# For Windows: use persons and captures
PERSONS_DIR=persons
CAPTURES_DIR=captures

# ========================================
# Optional: Advanced Settings
# ========================================
# Uncomment and modify if needed

# Camera settings
# WEBCAM_INDEX=0
# CAMERA_TIMEOUT=35

# Detection settings
# FACE_MODEL=hog
# FACE_TOLERANCE=0.6
# MAX_SCAN_SECONDS=8
# FRAME_STRIDE=1

# ========================================
# Notes
# ========================================
# 1. MQTT_BROKER must be YOUR WiFi IP address
# 2. Same IP must be set in:
#    - This file (MQTT_BROKER)
#    - docker-compose.yml (BEACON_IP)
#    - Flutter app (mqtt_config.dart)
# 3. For Windows setup, use relative paths (persons, captures)
# 4. For Docker setup, use absolute container paths (/data/persons)
